---
import type { ColorName } from '~/types/colors';

import CloseButton from './components/CloseButton.astro';
import ColorPicker from './components/color-picker/ColorPicker.svelte';
import DatePicker from './components/DatePicker.svelte';
import ResetColorButton from './components/ResetColorButton.svelte';

const colorData: Array<{
  colorName: ColorName;
  description: string;
}> = [
  { colorName: 'background', description: 'Background color' },
  {
    colorName: 'primary',
    description: 'Circle and picker color',
  },
  {
    colorName: 'secondary',
    description: 'Age, units, icons, and numbers color',
  },
  { colorName: 'text', description: 'Text color' },
];
---

<aside>
  <div class='close-btn-wrapper'>
    <CloseButton />
  </div>

  <DatePicker class='picker' client:idle />

  {
    colorData.map(({ colorName, description }) => (
      <ColorPicker
        colorName={colorName}
        description={description}
        class='picker'
        client:idle
      />
    ))
  }

  <ResetColorButton client:idle />
</aside>

<style lang='scss'>
  aside {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 0;
    display: flex;
    flex-direction: column;
    gap: 24px;
    width: var(--sidebar-width);
    max-width: 100%;
    height: 100%;
    padding: 16px;
    overflow: hidden;
    background-color: var(--color-primary);
    transform: translateX(-100%);
    transition: inherit;
    transition-property: transform;
  }

  .close-btn-wrapper {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    width: 100%;
    margin-bottom: 16px;
  }

  .picker {
    :global(.trigger) {
      display: flex;
      gap: 8px;
      align-items: center;
      width: 100%;
      padding: 12px;
      color: var(--color-text);
      font-size: 14px;
      line-height: 1.3em;
      background-color: var(--color-primary);
      border-radius: 8px;
      box-shadow: var(--shadow-high);
      cursor: pointer;

      &:hover,
      &:focus-visible,
      &:focus-within {
        box-shadow: var(--shadow-medium);
      }
    }
  }

  @include sidebar-open {
    aside {
      z-index: 1200;
      overflow: auto;
      box-shadow: var(--shadow-high);
      transform: translateX(0);
    }
  }
</style>
