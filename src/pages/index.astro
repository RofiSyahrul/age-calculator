---
import Age from '~/components/age/Age.astro';
import BirthdayParty from '~/components/BirthdayParty.svelte';
import Footer from '~/components/Footer.astro';
import Sidebar from '~/components/sidebar/Sidebar.astro';
import ToggleSidebarButton from '~/components/ToggleSidebarButton.svelte';
import Layout from '~/layouts/Layout.astro';
---

<Layout
  title={import.meta.env.IS_EXTENSION
    ? 'New Tab'
    : 'Calculate your age'}
>
  <Age />
  <Sidebar />
  <ToggleSidebarButton
    class='setting-btn'
    title='Open Sidebar'
    client:idle
  >
    <svg
      aria-label='Setting Icon'
      xmlns='http://www.w3.org/2000/svg'
      xmlns:xlink='http://www.w3.org/1999/xlink'
      width='24'
      height='24'
      viewBox='0 0 24 24'
    >
      <path
        fill='currentcolor'
        d='M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z'
      ></path>
    </svg>
  </ToggleSidebarButton>
  <BirthdayParty client:idle />
  <Footer />
</Layout>

<script>
  import { birthdate } from '~/stores/birthdate';
  import { colors } from '~/stores/colors';
  import { subscribeToColorsChange } from '~/stores/colors';
  import { subscribeSidebarStore } from '~/stores/sidebar';
  import { getStorageValues } from '~/utils/storage';

  subscribeSidebarStore();
  subscribeToColorsChange();

  (async () => {
    const storageValues = await getStorageValues();
    const { dob, ...storageValuesForColors } = storageValues;
    birthdate.set(dob);
    colors.set(storageValuesForColors);
  })();
</script>

<style is:global lang='scss'>
  body {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: center;
    margin: 8px;
    background-color: var(--color-background);
    transition-timing-function: ease-in;
    transition-duration: 400ms;
    transition-property: width, padding;
  }

  @media (max-width: 649.95px) {
    footer p,
    main h1,
    .age-unit span {
      transition-property: transform;
    }
  }

  [data-sidebar-open] {
    footer p,
    main h1,
    .age-unit span {
      @media (max-width: 649.95px) {
        transform: scale(0.8);
      }

      @media (max-width: 599.95px) {
        transform: scale(0.65);
      }

      @media (max-width: 549.95px) {
        transform: scale(0.5);
      }
    }
  }
</style>

<style lang='scss'>
  .setting-btn {
    position: fixed;
    top: 16px;
    left: 16px;
    z-index: 1050;
    min-width: 48px;
    min-height: 48px;
    padding: 0 8px;
    color: var(--color-secondary);
    box-shadow: var(--shadow-high);
    transition: inherit;
    transition-property: transform, opacity;

    --bg-btn: var(--color-primary);
  }

  @include sidebar-open {
    .setting-btn {
      z-index: 0;
      transform: translateX(min(var(--sidebar-width), 100vw))
        translateX(-100%) translateX(-32px);
      opacity: 0;
      pointer-events: none;
    }
  }
</style>
